version: "3.3"

services:
  web:
    build:
      context: ./app
      dockerfile: ./Dockerfile
      args:
        STATIC_URL: "/static/"
        STATIC_ROOT: os.path.join(BASE_DIR, 'static')
    restart: unless-stopped
    image: app_web
    networks:
      - app-network
    # '/start' is the shell script used to run the service
    #command: python manage.py runserver 0.0.0.0:8000
    # command: gunicorn --bind 0.0.0.0:8000 --timeout 200 core.wsgi --worker-class gevent
    command: gunicorn --bind 0.0.0.0:8002 --worker-class=gevent --worker-connections=500 --workers=3 core.wsgi
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - ./app/core:/app/core
      - media:/app/media
    ports:
      - 8002:8002
    # env_file is used to manage the env variables of our project
    depends_on:
      - db
    env_file:
      - ./app/.env
    environment:
      - STATIC_ROOT=/app/static
      - MEDIA_URL=/app/media/
    links:
      - db

  db:
    image: library/postgres:13.2-alpine
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./app/.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}


volumes:
  postgres_data:
    driver: local
  media:  
    driver: local

networks:
  app-network:
    driver: bridge